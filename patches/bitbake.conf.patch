--- openembedded-core/meta/conf/bitbake.conf	2015-04-02 13:18:18.746799364 +0200
+++ conf/bitbake.conf	2015-04-02 13:28:56.741941347 +0200
@@ -1,3 +1,4 @@
+# Automatically generated file with command make patches. Do not edit!
 ##################################################################
 # Standard target filesystem paths.
 ##################################################################
@@ -13,9 +14,12 @@
 BASELIB_powerpc64 = "lib64"
 
 # Path prefixes
-export base_prefix = ""
-export prefix = "/usr"
-export exec_prefix = "/usr"
+export base_prefix = "/share/Apps/openpch"
+export prefix = "/share/Apps/openpch"
+export exec_prefix = "/share/Apps/openpch"
+
+# Add for openpch and update-rc.d
+export base_prefix_target := "${base_prefix}"
 
 # Base paths
 export base_bindir = "${base_prefix}/bin"
@@ -433,14 +437,17 @@
 # Build utility info.
 ##################################################################
 
-CCACHE ??= ""
+# Set the ccache binary to use don't forget the final space !
+# Don't use an absolute path also !
+export CCACHE ??= "ccache "
 # Disable ccache explicitly if CCACHE is null since gcc may be a symlink
 # of ccache some distributions (e.g., Fedora 17).
-export CCACHE_DISABLE ??= "${@[0,1][d.getVar('CCACHE', True) == '']}"
+# DON'T DEFINE CCACHE_DISABLE IF YOU WANT TO ENABLE CCACHE
+#export CCACHE_DISABLE ??= "${@[0,1][d.getVar('CCACHE', True) == '']}"
 # Assign CCACHE_DIR a default value to fix a bug of ccache 3.1.7,
 # since it would always create CCACHE_DIR/.ccache even if
 # CCACHE_DISABLE = 1.
-export CCACHE_DIR ??= "${@os.getenv('HOME')}"
+export CCACHE_DIR ??= "${@os.getenv('HOME')}/.ccache"
 
 TOOLCHAIN_OPTIONS = " --sysroot=${STAGING_DIR_TARGET}"
 
@@ -526,10 +533,15 @@
 TARGET_LINK_HASH_STYLE ?= "${@['-Wl,--hash-style=gnu',''][d.getVar('LINKER_HASH_STYLE', True) != 'gnu']}"
 
 export LDFLAGS = "${TARGET_LDFLAGS}"
-export TARGET_LDFLAGS = "-Wl,-O1 ${TARGET_LINK_HASH_STYLE}"
-#export TARGET_LDFLAGS = "-L${STAGING_DIR_TARGET}${libdir} \
-#                         -Wl,-rpath-link,${STAGING_DIR_TARGET}${libdir} \
-#                         -Wl,-O1"
+# Use rpath for openpch
+#export TARGET_LDFLAGS = "-Wl,-O1 ${TARGET_LINK_HASH_STYLE}"
+export TARGET_LDFLAGS = "-L${STAGING_DIR_TARGET}${libdir} \
+                         -Wl,-rpath-link,${STAGING_DIR_TARGET}${libdir} \
+                         -Wl,-rpath,${libdir} \
+                         -Wl,-O1"
+
+# Remove useless-rpath checks from QA
+WARN_QA_remove = "useless-rpaths"
 
 # Which flags to leave by strip-flags() in bin/build/oebuild.sh ?
 ALLOWED_FLAGS = "-O -mcpu -march -pipe"
@@ -605,7 +617,7 @@
 
 # Use pseudo as the fakeroot implementation
 PSEUDO_LOCALSTATEDIR ?= "${WORKDIR}/pseudo/"
-PSEUDO_PASSWD ?= "${STAGING_DIR_TARGET}"
+PSEUDO_PASSWD ?= "${STAGING_DIR_TARGET}${base_prefix}"
 export PSEUDO_DISABLED = "1"
 #export PSEUDO_PREFIX = "${STAGING_DIR_NATIVE}${prefix_native}"
 #export PSEUDO_BINDIR = "${STAGING_DIR_NATIVE}${bindir_native}"
